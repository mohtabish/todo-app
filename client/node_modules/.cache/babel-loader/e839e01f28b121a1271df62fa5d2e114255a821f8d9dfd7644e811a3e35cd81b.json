{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL\n});\n\n// Add token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const authAPI = {\n  login: (identifier, password) => api.post('/auth/login', {\n    identifier,\n    password\n  }),\n  register: (email, username, password) => api.post('/auth/register', {\n    email,\n    username,\n    password\n  })\n};\nexport const todoAPI = {\n  getTodos: () => api.get('/todos'),\n  createTodo: todo => api.post('/todos', todo),\n  updateTodo: (id, todo) => api.put(`/todos/${id}`, todo),\n  deleteTodo: id => api.delete(`/todos/${id}`)\n};\nexport const adminAPI = {\n  getUsers: () => api.get('/admin/users'),\n  getAllTodos: () => api.get('/admin/todos'),\n  updateUserRole: (id, role) => api.patch(`/admin/users/${id}/role`, {\n    role\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","authAPI","login","identifier","password","post","register","email","username","todoAPI","getTodos","get","createTodo","todo","updateTodo","id","put","deleteTodo","delete","adminAPI","getUsers","getAllTodos","updateUserRole","role","patch"],"sources":["C:/Users/HP/OneDrive/Desktop/todo-app/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n});\r\n\r\n// Add token to requests\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport const authAPI = {\r\n  login: (identifier, password) =>\r\n    api.post('/auth/login', { identifier, password }),\r\n  register: (email, username, password) =>\r\n    api.post('/auth/register', { email, username, password }),\r\n};\r\n\r\nexport const todoAPI = {\r\n  getTodos: () => api.get('/todos'),\r\n  createTodo: (todo) => api.post('/todos', todo),\r\n  updateTodo: (id, todo) => api.put(`/todos/${id}`, todo),\r\n  deleteTodo: (id) => api.delete(`/todos/${id}`),\r\n};\r\n\r\nexport const adminAPI = {\r\n  getUsers: () => api.get('/admin/users'),\r\n  getAllTodos: () => api.get('/admin/todos'),\r\n  updateUserRole: (id, role) => api.patch(`/admin/users/${id}/role`, { role }),\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN;AACX,CAAC,CAAC;;AAEF;AACAI,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMM,OAAO,GAAG;EACrBC,KAAK,EAAEA,CAACC,UAAU,EAAEC,QAAQ,KAC1Bf,GAAG,CAACgB,IAAI,CAAC,aAAa,EAAE;IAAEF,UAAU;IAAEC;EAAS,CAAC,CAAC;EACnDE,QAAQ,EAAEA,CAACC,KAAK,EAAEC,QAAQ,EAAEJ,QAAQ,KAClCf,GAAG,CAACgB,IAAI,CAAC,gBAAgB,EAAE;IAAEE,KAAK;IAAEC,QAAQ;IAAEJ;EAAS,CAAC;AAC5D,CAAC;AAED,OAAO,MAAMK,OAAO,GAAG;EACrBC,QAAQ,EAAEA,CAAA,KAAMrB,GAAG,CAACsB,GAAG,CAAC,QAAQ,CAAC;EACjCC,UAAU,EAAGC,IAAI,IAAKxB,GAAG,CAACgB,IAAI,CAAC,QAAQ,EAAEQ,IAAI,CAAC;EAC9CC,UAAU,EAAEA,CAACC,EAAE,EAAEF,IAAI,KAAKxB,GAAG,CAAC2B,GAAG,CAAC,UAAUD,EAAE,EAAE,EAAEF,IAAI,CAAC;EACvDI,UAAU,EAAGF,EAAE,IAAK1B,GAAG,CAAC6B,MAAM,CAAC,UAAUH,EAAE,EAAE;AAC/C,CAAC;AAED,OAAO,MAAMI,QAAQ,GAAG;EACtBC,QAAQ,EAAEA,CAAA,KAAM/B,GAAG,CAACsB,GAAG,CAAC,cAAc,CAAC;EACvCU,WAAW,EAAEA,CAAA,KAAMhC,GAAG,CAACsB,GAAG,CAAC,cAAc,CAAC;EAC1CW,cAAc,EAAEA,CAACP,EAAE,EAAEQ,IAAI,KAAKlC,GAAG,CAACmC,KAAK,CAAC,gBAAgBT,EAAE,OAAO,EAAE;IAAEQ;EAAK,CAAC;AAC7E,CAAC;AAED,eAAelC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}